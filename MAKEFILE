# Specify the SAT test target and dependencies
TARGETS = pmll arc_agi_benchmark pmll_np_solver sat_test

# SAT Test target
sat_test: SAT_Compare.o Pmll_NP_Solver.o MiniSAT.o generate_3sat_instance.o SAT_Solver.o 3_sat_log.o
	$(CC) $(CFLAGS) $(LDFLAGS) $(INCLUDES) -o $@ $^

# Compile SAT_Compare.o from SAT_Compare.c
SAT_Compare.o: SAT_Compare.c SAT_Solver.h Pmll_NP_Solver.h MiniSAT.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

# Compile MiniSAT.o from MiniSAT.c
MiniSAT.o: MiniSAT.c MiniSAT.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

# Compile Pmll_NP_Solver.o from Pmll_NP_Solver.c
Pmll_NP_Solver.o: Pmll_NP_Solver.c Pmll_NP_Solver.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

# Compile SAT_Solver.o from SAT_Solver.c
SAT_Solver.o: SAT_Solver.c SAT_Solver.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

# Compile generate_3sat_instance.o from 3-SAT.c (used for SAT instance generation)
generate_3sat_instance.o: 3-SAT.c SAT_Solver.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

# Compile 3_sat_log.o from 3_sat_log.c (logging results)
3_sat_log.o: 3_sat_log.c SAT_Solver.h Pmll_NP_Solver.h MiniSAT.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

# Existing targets
pmll: unified_voice.o pml_logic_loop.o memory_silo.o io_socket.o persistence.o main.o
	$(CC) $(CFLAGS) $(LDFLAGS) $(INCLUDES) -o $@ $^

pmll_np_solver: pmll_np_solver.o
	$(CC) $(CFLAGS) $(LDFLAGS) $(INCLUDES) -o $@ $^

arc_agi_benchmark: arc_agi_benchmark.o
	$(CC) $(CFLAGS) $(ARC_AGI_BENCHMARK_CFLAGS) $(LDFLAGS) $(ARC_AGI_BENCHMARK_LDFLAGS) $(INCLUDES) -o $@ $^

# Compilation rules for other .o files
unified_voice.o: unified_voice.c memory_silo.h io_socket.h
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

pml_logic_loop.o: pml_logic_loop.c
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

memory_silo.o: memory_silo.c
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

io_socket.o: io_socket.c
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

persistence.o: persistence.c
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

main.o: main.c
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

arc_agi_benchmark.o: arc_agi_benchmark.c
	$(CC) $(CFLAGS) $(ARC_AGI_BENCHMARK_CFLAGS) $(INCLUDES) -c $<

pmll_np_solver.o: pmll_np_solver.c
	$(CC) $(CFLAGS) $(INCLUDES) -c $<

# Clean up
clean:
	rm -f *.o $(TARGETS)

# Run commands
run: pmll
	./pmll

run_arc_agi_benchmark: arc_agi_benchmark
	./arc_agi_benchmark

run_pmll_np_solver: pmll_np_solver
	./pmll_np_solver

# Add a run command for the SAT test
run_sat_test: sat_test
	./sat_test
